{"version":3,"sources":["BicyclePlace.js","App.js","index.js"],"names":["BicyclePlace","stationId","stationName","shared","rackTotCnt","dot","indexOf","stationNum","slice","slicedName","naverMapLink","trim","href","parseInt","App","React","Component","state","isLoading","row","getJsonData","jsonData","rentBikeStatus","this","setState","componentDidMount","render","className","src","alt","colSpan","map","info","index","key","ReactDOM","document","getElementById"],"mappings":"kvlNAkCeA,MA/Bf,UAAsB,UAAEC,EAAF,YAAaC,EAAb,OAA0BC,EAA1B,WAAkCC,IACtD,IAAIC,EAAMH,EAAYI,QAAQ,KAC1BC,EAAaL,EAAYM,MAAM,EAAGH,GAClCI,EAAaP,EAAYM,MAAMH,EAAM,GACrCK,EACF,mCAAqCD,EAAWE,KAAK,IAAK,IAE5D,OACE,4BACE,4BAAKV,GACL,4BAAKM,GACL,4BACE,uBAAGK,KAAMF,GAAT,IAAyBD,IAE3B,4BACGL,EAAaD,EAAS,IAAqB,IAAfC,EACzB,IAAMS,SAAST,EAAaD,GAC5BC,EAAaD,EAHnB,KAIKU,SAAST,GAAc,GAAK,IAAMA,EAAaA,K,QCf1D,MAAMU,UAAYC,IAAMC,UAAW,eAAD,oBAChCC,MAAQ,CACNC,WAAW,EACXC,IAAK,IAHyB,KAqBhCC,YAAc,KAAO,MAECD,EAChBE,EADFC,eAAkBH,IAEpBI,KAAKC,SAAS,CAAEN,WAAW,EAAOC,SAEpCM,oBAEEF,KAAKH,cAGPM,SAAU,MAAD,EACoBH,KAAKN,MAAxBC,EADD,EACCA,UAAWC,EADZ,EACYA,IACnB,OACE,6BAASQ,UAAU,aAChBT,EACC,yBAAKS,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,6BACE,yBAAKA,UAAU,UACb,2BAAOA,UAAU,eACf,+BACE,4BACE,4BACE,yBACEA,UAAU,OACVC,IAAI,gFACJC,IAAI,UAGR,wBAAIF,UAAU,SAAd,0EAEF,4BACE,wBAAIG,QAAQ,KACV,uBAAGH,UAAU,eAAb,uIAC6B,6BAD7B,sIASV,yBAAKA,UAAU,eACb,2BAAOA,UAAU,gBACf,+BACE,wBAAIA,UAAU,oBACZ,qDACA,+DACA,+DACA,2DAGHR,EAAIY,IAAI,CAACC,EAAMC,IACd,2BAAON,UAAU,oBACf,kBAAC,EAAD,CACEO,IAAKD,EACLhC,UAAW+B,EAAK/B,UAChBC,YAAa8B,EAAK9B,YAClBE,WAAY4B,EAAK5B,WACjBD,OAAQ6B,EAAK7B,gBAapBW,QClGfqB,IAAST,OAAO,kBAAC,EAAD,MAASU,SAASC,eAAe,W","file":"static/js/main.b38a48eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction BicyclePlace({ stationId, stationName, shared, rackTotCnt }) {\r\n  let dot = stationName.indexOf(\".\");\r\n  let stationNum = stationName.slice(0, dot);\r\n  let slicedName = stationName.slice(dot + 1);\r\n  let naverMapLink =\r\n    \"https://map.naver.com/v5/search/\" + slicedName.trim(\" \", \"\");\r\n\r\n  return (\r\n    <tr>\r\n      <td>{stationId}</td>\r\n      <td>{stationNum}</td>\r\n      <td>\r\n        <a href={naverMapLink}> {slicedName}</a>\r\n      </td>\r\n      <td>\r\n        {rackTotCnt - shared < 10 || rackTotCnt === 0\r\n          ? \"0\" + parseInt(rackTotCnt - shared)\r\n          : rackTotCnt - shared}\r\n        / {parseInt(rackTotCnt) < 10 ? \"0\" + rackTotCnt : rackTotCnt}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nBicyclePlace.propTypes = {\r\n  stationId: PropTypes.string,\r\n  stationName: PropTypes.string,\r\n  shared: PropTypes.string.isRequired,\r\n  rackTotCnt: PropTypes.string,\r\n};\r\n\r\nexport default BicyclePlace;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport BicyclePlace from \"./BicyclePlace\";\nimport jsonData from \"./example.json\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    row: [],\n  };\n  /*\n  getAPIinfo = async () => {\n    const {\n      data: {\n        rentBikeStatus: { row },\n      },\n    } = await axios.get(\n      \"http://openapi.seoul.go.kr:8088/63646f6d6268617238344e46796778/json/bikeList/1/1000\"\n    );\n    this.setState({ row, isLoading: false });\n    console.log({ row });\n  };\n  // 서울시 정보 앱이 https로 데이터를 불러올 수 없어서 example.json으로 데이터를 저장하여 사용하였음\n  // localhost에서는 잘 불러와지기 때문에 작동하던 코드만 비활성화 하였음\n*/\n\n  getJsonData = () => {\n    const {\n      rentBikeStatus: { row },\n    } = jsonData;\n    this.setState({ isLoading: false, row });\n  };\n  componentDidMount() {\n    // this.getAPIinfo();\n    this.getJsonData();\n  }\n\n  render() {\n    const { isLoading, row } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div>\n            <div className=\"header\">\n              <table className=\"headerTable\">\n                <tbody>\n                  <tr>\n                    <td>\n                      <img\n                        className=\"logo\"\n                        src=\"https://blog.kakaocdn.net/dn/w21Y9/btqu9QnIrhP/D38e5tsM4qw8OlHiRKwHr1/img.jpg\"\n                        alt=\"logo\"\n                      ></img>\n                    </td>\n                    <td className=\"title\">서울시 자전거 정류장 정보</td>\n                  </tr>\n                  <tr>\n                    <td colSpan=\"2\">\n                      <p className=\"explainLine\">\n                        정류장 이름을 클릭하면 네이버 지도로 이동합니다 <br />\n                        (새 창에서 여시려면 ctrl을 누른채로 클릭해주세요)\n                      </p>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div className=\"bicycleInfo\">\n              <table className=\"bicycleTable\">\n                <thead>\n                  <tr className=\"bicycleTableHead\">\n                    <td>정류장 ID</td>\n                    <td>정류장 번호</td>\n                    <td>정류장 이름</td>\n                    <td>자전거 수</td>\n                  </tr>\n                </thead>\n                {row.map((info, index) => (\n                  <tbody className=\"bicycleTableBody\">\n                    <BicyclePlace\n                      key={index}\n                      stationId={info.stationId}\n                      stationName={info.stationName}\n                      rackTotCnt={info.rackTotCnt}\n                      shared={info.shared}\n                    />\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}